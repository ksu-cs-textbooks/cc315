




	
	
		

	
	
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		

	
	
		

	
	
		
		
		
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		

	
	
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		

	
	
		
		
		
		

	
	
		

	
	
		

	
	
		
		

	
	
		
		
		
<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Graphs: Minimum Spanning Trees on CC 315 Textbook</title>
    <link>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/</link>
    <description>Recent content in Graphs: Minimum Spanning Trees on CC 315 Textbook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Aug 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Introduction</title>
      <link>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/1-introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/1-introduction/</guid>
      <description>We will continue to work with graph algorithms in this module, specifically with finding minimum spanning trees (MST). MSTs have many real world applications such as:
Electrical wiring, Distribution networks, Telecommunication networks, and Network routing Suppose we were building an apartment complex and wanted to determine the most cost-effective wiring schema. Below, we have the possible construction costs for wiring apartment to apartment. Wiring vertically adjacent apartments is cheaper than wiring horizontally adjacent units and those closest to the power closet have lower costs as well.</description>
    </item>
    <item>
      <title>Minimum Spanning Trees</title>
      <link>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/2-minimum-spanning-trees/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/2-minimum-spanning-trees/</guid>
      <description>Now that we have an understanding of general spanning trees, we will introduce the concept of minimum spanning trees. First let&amp;rsquo;s introduce the concept of the cost of a tree.
The cost that is associated with a tree, is the sum of its edges weights. Let&amp;rsquo;s look at this spanning tree which is from the previous page. The cost associated with this spanning tree is: 2+6+10+14=32. Minimum Spanning Trees (MST) A minimum spanning tree is a spanning tree that has the smallest cost.</description>
    </item>
    <item>
      <title>Kruskal</title>
      <link>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/3-kruskal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/3-kruskal/</guid>
      <description>As graphs get larger, it is important to go about finding the MST in a methodical way. In the mid 1950&amp;rsquo;s, there was a desire to form an algorithmic approach for solving the &amp;rsquo;traveling salesperson&amp;rsquo; problem^[We will describe this problem in a future section of this module]. Joseph Kruskal first published this algorithm in 1956 in the Proceedings of the American Mathematical Society^[https://www.ams.org/journals/proc/1956-007-01/S0002-9939-1956-0078686-7/S0002-9939-1956-0078686-7.pdf]. The algorithms prior to this were, as Kruskal said, &amp;ldquo;unnecessarily elaborate&amp;rdquo; thus the need for a more succinct algorithm arose.</description>
    </item>
    <item>
      <title>Prim</title>
      <link>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/4-prim/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/4-prim/</guid>
      <description>The history of Prim&#39;s Algorithm is not as straight forward as Kruskal&amp;rsquo;s. While we often call it Prim&#39;s Algorithm, it was originally developed in 1930 by Vojtěch Jarník. Robert Prim later rediscovered and republished this algorithm in 1957, one year after Kruskals. To add to the naming confusion, Edsger Dijkstra also published this work again in 1959. Because of this, the algorithm can go by many names: Jarkík&#39;s Algorithm, Jarník-Prim&#39;s Algorithm, Prim-Dijkstra&#39;s Algorithm, and DJP Algorithm.</description>
    </item>
    <item>
      <title>Traveling Salesperson</title>
      <link>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/5-traveling-salesperson/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://ksu-cs-textbooks.github.io/cc315/iii-graphs/9-graphs-minimum-spanning-trees/5-traveling-salesperson/</guid>
      <description>While we won&amp;rsquo;t outline algorithms suited for solving the traveling salesperson problem (TSP), we will outline the premise of the problem. This problem was first posed in 1832, almost a two centuries ago, and is still quite prevalent. It is applicable to traveling routes, distribution networks, computer architecture and much more. The TSP is a seminal problem that has motivated many research breakthroughs, including Kruskals algorithm!
The motivation of the TSP is this: given a set of locations, what is the shortest path such that we can visit each location and end back where started?</description>
    </item>
  </channel>
</rss>